/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sdcb.Mattermost.DotNetSdk.Client.OpenAPIDateConverter;

namespace Sdcb.Mattermost.DotNetSdk.Model
{
    /// <summary>
    /// DataRetentionPolicy
    /// </summary>
    [DataContract]
    public partial class DataRetentionPolicy :  IEquatable<DataRetentionPolicy>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DataRetentionPolicy" /> class.
        /// </summary>
        /// <param name="messageDeletionEnabled">Indicates whether data retention policy deletion of messages is enabled..</param>
        /// <param name="fileDeletionEnabled">Indicates whether data retention policy deletion of file attachments is enabled..</param>
        /// <param name="messageRetentionCutoff">The current server timestamp before which messages should be deleted..</param>
        /// <param name="fileRetentionCutoff">The current server timestamp before which files should be deleted..</param>
        public DataRetentionPolicy(bool messageDeletionEnabled = default(bool), bool fileDeletionEnabled = default(bool), int messageRetentionCutoff = default(int), int fileRetentionCutoff = default(int))
        {
            this.MessageDeletionEnabled = messageDeletionEnabled;
            this.FileDeletionEnabled = fileDeletionEnabled;
            this.MessageRetentionCutoff = messageRetentionCutoff;
            this.FileRetentionCutoff = fileRetentionCutoff;
        }
        
        /// <summary>
        /// Indicates whether data retention policy deletion of messages is enabled.
        /// </summary>
        /// <value>Indicates whether data retention policy deletion of messages is enabled.</value>
        [DataMember(Name="message_deletion_enabled", EmitDefaultValue=false)]
        public bool MessageDeletionEnabled { get; set; }

        /// <summary>
        /// Indicates whether data retention policy deletion of file attachments is enabled.
        /// </summary>
        /// <value>Indicates whether data retention policy deletion of file attachments is enabled.</value>
        [DataMember(Name="file_deletion_enabled", EmitDefaultValue=false)]
        public bool FileDeletionEnabled { get; set; }

        /// <summary>
        /// The current server timestamp before which messages should be deleted.
        /// </summary>
        /// <value>The current server timestamp before which messages should be deleted.</value>
        [DataMember(Name="message_retention_cutoff", EmitDefaultValue=false)]
        public int MessageRetentionCutoff { get; set; }

        /// <summary>
        /// The current server timestamp before which files should be deleted.
        /// </summary>
        /// <value>The current server timestamp before which files should be deleted.</value>
        [DataMember(Name="file_retention_cutoff", EmitDefaultValue=false)]
        public int FileRetentionCutoff { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DataRetentionPolicy {\n");
            sb.Append("  MessageDeletionEnabled: ").Append(MessageDeletionEnabled).Append("\n");
            sb.Append("  FileDeletionEnabled: ").Append(FileDeletionEnabled).Append("\n");
            sb.Append("  MessageRetentionCutoff: ").Append(MessageRetentionCutoff).Append("\n");
            sb.Append("  FileRetentionCutoff: ").Append(FileRetentionCutoff).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DataRetentionPolicy);
        }

        /// <summary>
        /// Returns true if DataRetentionPolicy instances are equal
        /// </summary>
        /// <param name="input">Instance of DataRetentionPolicy to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DataRetentionPolicy input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MessageDeletionEnabled == input.MessageDeletionEnabled ||
                    this.MessageDeletionEnabled.Equals(input.MessageDeletionEnabled)
                ) && 
                (
                    this.FileDeletionEnabled == input.FileDeletionEnabled ||
                    this.FileDeletionEnabled.Equals(input.FileDeletionEnabled)
                ) && 
                (
                    this.MessageRetentionCutoff == input.MessageRetentionCutoff ||
                    this.MessageRetentionCutoff.Equals(input.MessageRetentionCutoff)
                ) && 
                (
                    this.FileRetentionCutoff == input.FileRetentionCutoff ||
                    this.FileRetentionCutoff.Equals(input.FileRetentionCutoff)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.MessageDeletionEnabled.GetHashCode();
                hashCode = hashCode * 59 + this.FileDeletionEnabled.GetHashCode();
                hashCode = hashCode * 59 + this.MessageRetentionCutoff.GetHashCode();
                hashCode = hashCode * 59 + this.FileRetentionCutoff.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
