/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sdcb.Mattermost.DotNetSdk.Client.OpenAPIDateConverter;

namespace Sdcb.Mattermost.DotNetSdk.Model
{
    /// <summary>
    /// InlineResponse201
    /// </summary>
    [DataContract]
    public partial class InlineResponse201 :  IEquatable<InlineResponse201>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse201" /> class.
        /// </summary>
        /// <param name="fileInfos">A list of file metadata that has been stored in the database.</param>
        /// <param name="clientIds">A list of the client_ids that were provided in the request.</param>
        public InlineResponse201(List<FileInfo> fileInfos = default(List<FileInfo>), List<string> clientIds = default(List<string>))
        {
            this.FileInfos = fileInfos;
            this.ClientIds = clientIds;
        }
        
        /// <summary>
        /// A list of file metadata that has been stored in the database
        /// </summary>
        /// <value>A list of file metadata that has been stored in the database</value>
        [DataMember(Name="file_infos", EmitDefaultValue=false)]
        public List<FileInfo> FileInfos { get; set; }

        /// <summary>
        /// A list of the client_ids that were provided in the request
        /// </summary>
        /// <value>A list of the client_ids that were provided in the request</value>
        [DataMember(Name="client_ids", EmitDefaultValue=false)]
        public List<string> ClientIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse201 {\n");
            sb.Append("  FileInfos: ").Append(FileInfos).Append("\n");
            sb.Append("  ClientIds: ").Append(ClientIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse201);
        }

        /// <summary>
        /// Returns true if InlineResponse201 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse201 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse201 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FileInfos == input.FileInfos ||
                    this.FileInfos != null &&
                    input.FileInfos != null &&
                    this.FileInfos.SequenceEqual(input.FileInfos)
                ) && 
                (
                    this.ClientIds == input.ClientIds ||
                    this.ClientIds != null &&
                    input.ClientIds != null &&
                    this.ClientIds.SequenceEqual(input.ClientIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FileInfos != null)
                    hashCode = hashCode * 59 + this.FileInfos.GetHashCode();
                if (this.ClientIds != null)
                    hashCode = hashCode * 59 + this.ClientIds.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
