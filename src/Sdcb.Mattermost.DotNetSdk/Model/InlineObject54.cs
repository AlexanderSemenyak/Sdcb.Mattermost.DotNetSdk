/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sdcb.Mattermost.DotNetSdk.Client.OpenAPIDateConverter;

namespace Sdcb.Mattermost.DotNetSdk.Model
{
    /// <summary>
    /// InlineObject54
    /// </summary>
    [DataContract]
    public partial class InlineObject54 :  IEquatable<InlineObject54>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineObject54" /> class.
        /// </summary>
        [JsonConstructor]
        protected InlineObject54() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineObject54" /> class.
        /// </summary>
        /// <param name="channelId">Channel Id where the command will execute (required).</param>
        /// <param name="command">The slash command to execute (required).</param>
        public InlineObject54(string channelId = default(string), string command = default(string))
        {
            // to ensure "channelId" is required (not null)
            if (channelId == null)
            {
                throw new InvalidDataException("channelId is a required property for InlineObject54 and cannot be null");
            }
            else
            {
                this.ChannelId = channelId;
            }

            // to ensure "command" is required (not null)
            if (command == null)
            {
                throw new InvalidDataException("command is a required property for InlineObject54 and cannot be null");
            }
            else
            {
                this.Command = command;
            }

        }
        
        /// <summary>
        /// Channel Id where the command will execute
        /// </summary>
        /// <value>Channel Id where the command will execute</value>
        [DataMember(Name="channel_id", EmitDefaultValue=false)]
        public string ChannelId { get; set; }

        /// <summary>
        /// The slash command to execute
        /// </summary>
        /// <value>The slash command to execute</value>
        [DataMember(Name="command", EmitDefaultValue=false)]
        public string Command { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineObject54 {\n");
            sb.Append("  ChannelId: ").Append(ChannelId).Append("\n");
            sb.Append("  Command: ").Append(Command).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineObject54);
        }

        /// <summary>
        /// Returns true if InlineObject54 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineObject54 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineObject54 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ChannelId == input.ChannelId ||
                    (this.ChannelId != null &&
                    this.ChannelId.Equals(input.ChannelId))
                ) && 
                (
                    this.Command == input.Command ||
                    (this.Command != null &&
                    this.Command.Equals(input.Command))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ChannelId != null)
                    hashCode = hashCode * 59 + this.ChannelId.GetHashCode();
                if (this.Command != null)
                    hashCode = hashCode * 59 + this.Command.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
