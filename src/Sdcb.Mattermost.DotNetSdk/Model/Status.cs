/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sdcb.Mattermost.DotNetSdk.Client.OpenAPIDateConverter;

namespace Sdcb.Mattermost.DotNetSdk.Model
{
    /// <summary>
    /// Status
    /// </summary>
    [DataContract]
    public partial class Status :  IEquatable<Status>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Status" /> class.
        /// </summary>
        /// <param name="userId">userId.</param>
        /// <param name="status">status.</param>
        /// <param name="manual">manual.</param>
        /// <param name="lastActivityAt">lastActivityAt.</param>
        public Status(string userId = default(string), string status = default(string), bool manual = default(bool), long lastActivityAt = default(long))
        {
            this.UserId = userId;
            this._Status = status;
            this.Manual = manual;
            this.LastActivityAt = lastActivityAt;
        }
        
        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="user_id", EmitDefaultValue=false)]
        public string UserId { get; set; }

        /// <summary>
        /// Gets or Sets _Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string _Status { get; set; }

        /// <summary>
        /// Gets or Sets Manual
        /// </summary>
        [DataMember(Name="manual", EmitDefaultValue=false)]
        public bool Manual { get; set; }

        /// <summary>
        /// Gets or Sets LastActivityAt
        /// </summary>
        [DataMember(Name="last_activity_at", EmitDefaultValue=false)]
        public long LastActivityAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Status {\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  _Status: ").Append(_Status).Append("\n");
            sb.Append("  Manual: ").Append(Manual).Append("\n");
            sb.Append("  LastActivityAt: ").Append(LastActivityAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Status);
        }

        /// <summary>
        /// Returns true if Status instances are equal
        /// </summary>
        /// <param name="input">Instance of Status to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Status input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this._Status == input._Status ||
                    (this._Status != null &&
                    this._Status.Equals(input._Status))
                ) && 
                (
                    this.Manual == input.Manual ||
                    this.Manual.Equals(input.Manual)
                ) && 
                (
                    this.LastActivityAt == input.LastActivityAt ||
                    this.LastActivityAt.Equals(input.LastActivityAt)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this._Status != null)
                    hashCode = hashCode * 59 + this._Status.GetHashCode();
                hashCode = hashCode * 59 + this.Manual.GetHashCode();
                hashCode = hashCode * 59 + this.LastActivityAt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
