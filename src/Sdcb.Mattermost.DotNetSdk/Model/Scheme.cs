/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sdcb.Mattermost.DotNetSdk.Client.OpenAPIDateConverter;

namespace Sdcb.Mattermost.DotNetSdk.Model
{
    /// <summary>
    /// Scheme
    /// </summary>
    [DataContract]
    public partial class Scheme :  IEquatable<Scheme>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Scheme" /> class.
        /// </summary>
        /// <param name="id">The unique identifier of the scheme..</param>
        /// <param name="name">The human readable name for the scheme..</param>
        /// <param name="description">A human readable description of the scheme..</param>
        /// <param name="createAt">The time at which the scheme was created..</param>
        /// <param name="updateAt">The time at which the scheme was last updated..</param>
        /// <param name="deleteAt">The time at which the scheme was deleted..</param>
        /// <param name="scope">The scope to which this scheme can be applied, either \&quot;team\&quot; or \&quot;channel\&quot;..</param>
        /// <param name="defaultTeamAdminRole">The id of the default team admin role for this scheme..</param>
        /// <param name="defaultTeamUserRole">The id of the default team user role for this scheme..</param>
        /// <param name="defaultChannelAdminRole">The id of the default channel admin role for this scheme..</param>
        /// <param name="defaultChannelUserRole">The id of the default channel user role for this scheme..</param>
        public Scheme(string id = default(string), string name = default(string), string description = default(string), long createAt = default(long), long updateAt = default(long), long deleteAt = default(long), string scope = default(string), string defaultTeamAdminRole = default(string), string defaultTeamUserRole = default(string), string defaultChannelAdminRole = default(string), string defaultChannelUserRole = default(string))
        {
            this.Id = id;
            this.Name = name;
            this.Description = description;
            this.CreateAt = createAt;
            this.UpdateAt = updateAt;
            this.DeleteAt = deleteAt;
            this.Scope = scope;
            this.DefaultTeamAdminRole = defaultTeamAdminRole;
            this.DefaultTeamUserRole = defaultTeamUserRole;
            this.DefaultChannelAdminRole = defaultChannelAdminRole;
            this.DefaultChannelUserRole = defaultChannelUserRole;
        }
        
        /// <summary>
        /// The unique identifier of the scheme.
        /// </summary>
        /// <value>The unique identifier of the scheme.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The human readable name for the scheme.
        /// </summary>
        /// <value>The human readable name for the scheme.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// A human readable description of the scheme.
        /// </summary>
        /// <value>A human readable description of the scheme.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// The time at which the scheme was created.
        /// </summary>
        /// <value>The time at which the scheme was created.</value>
        [DataMember(Name="create_at", EmitDefaultValue=false)]
        public long CreateAt { get; set; }

        /// <summary>
        /// The time at which the scheme was last updated.
        /// </summary>
        /// <value>The time at which the scheme was last updated.</value>
        [DataMember(Name="update_at", EmitDefaultValue=false)]
        public long UpdateAt { get; set; }

        /// <summary>
        /// The time at which the scheme was deleted.
        /// </summary>
        /// <value>The time at which the scheme was deleted.</value>
        [DataMember(Name="delete_at", EmitDefaultValue=false)]
        public long DeleteAt { get; set; }

        /// <summary>
        /// The scope to which this scheme can be applied, either \&quot;team\&quot; or \&quot;channel\&quot;.
        /// </summary>
        /// <value>The scope to which this scheme can be applied, either \&quot;team\&quot; or \&quot;channel\&quot;.</value>
        [DataMember(Name="scope", EmitDefaultValue=false)]
        public string Scope { get; set; }

        /// <summary>
        /// The id of the default team admin role for this scheme.
        /// </summary>
        /// <value>The id of the default team admin role for this scheme.</value>
        [DataMember(Name="default_team_admin_role", EmitDefaultValue=false)]
        public string DefaultTeamAdminRole { get; set; }

        /// <summary>
        /// The id of the default team user role for this scheme.
        /// </summary>
        /// <value>The id of the default team user role for this scheme.</value>
        [DataMember(Name="default_team_user_role", EmitDefaultValue=false)]
        public string DefaultTeamUserRole { get; set; }

        /// <summary>
        /// The id of the default channel admin role for this scheme.
        /// </summary>
        /// <value>The id of the default channel admin role for this scheme.</value>
        [DataMember(Name="default_channel_admin_role", EmitDefaultValue=false)]
        public string DefaultChannelAdminRole { get; set; }

        /// <summary>
        /// The id of the default channel user role for this scheme.
        /// </summary>
        /// <value>The id of the default channel user role for this scheme.</value>
        [DataMember(Name="default_channel_user_role", EmitDefaultValue=false)]
        public string DefaultChannelUserRole { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Scheme {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  CreateAt: ").Append(CreateAt).Append("\n");
            sb.Append("  UpdateAt: ").Append(UpdateAt).Append("\n");
            sb.Append("  DeleteAt: ").Append(DeleteAt).Append("\n");
            sb.Append("  Scope: ").Append(Scope).Append("\n");
            sb.Append("  DefaultTeamAdminRole: ").Append(DefaultTeamAdminRole).Append("\n");
            sb.Append("  DefaultTeamUserRole: ").Append(DefaultTeamUserRole).Append("\n");
            sb.Append("  DefaultChannelAdminRole: ").Append(DefaultChannelAdminRole).Append("\n");
            sb.Append("  DefaultChannelUserRole: ").Append(DefaultChannelUserRole).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Scheme);
        }

        /// <summary>
        /// Returns true if Scheme instances are equal
        /// </summary>
        /// <param name="input">Instance of Scheme to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Scheme input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.CreateAt == input.CreateAt ||
                    this.CreateAt.Equals(input.CreateAt)
                ) && 
                (
                    this.UpdateAt == input.UpdateAt ||
                    this.UpdateAt.Equals(input.UpdateAt)
                ) && 
                (
                    this.DeleteAt == input.DeleteAt ||
                    this.DeleteAt.Equals(input.DeleteAt)
                ) && 
                (
                    this.Scope == input.Scope ||
                    (this.Scope != null &&
                    this.Scope.Equals(input.Scope))
                ) && 
                (
                    this.DefaultTeamAdminRole == input.DefaultTeamAdminRole ||
                    (this.DefaultTeamAdminRole != null &&
                    this.DefaultTeamAdminRole.Equals(input.DefaultTeamAdminRole))
                ) && 
                (
                    this.DefaultTeamUserRole == input.DefaultTeamUserRole ||
                    (this.DefaultTeamUserRole != null &&
                    this.DefaultTeamUserRole.Equals(input.DefaultTeamUserRole))
                ) && 
                (
                    this.DefaultChannelAdminRole == input.DefaultChannelAdminRole ||
                    (this.DefaultChannelAdminRole != null &&
                    this.DefaultChannelAdminRole.Equals(input.DefaultChannelAdminRole))
                ) && 
                (
                    this.DefaultChannelUserRole == input.DefaultChannelUserRole ||
                    (this.DefaultChannelUserRole != null &&
                    this.DefaultChannelUserRole.Equals(input.DefaultChannelUserRole))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                hashCode = hashCode * 59 + this.CreateAt.GetHashCode();
                hashCode = hashCode * 59 + this.UpdateAt.GetHashCode();
                hashCode = hashCode * 59 + this.DeleteAt.GetHashCode();
                if (this.Scope != null)
                    hashCode = hashCode * 59 + this.Scope.GetHashCode();
                if (this.DefaultTeamAdminRole != null)
                    hashCode = hashCode * 59 + this.DefaultTeamAdminRole.GetHashCode();
                if (this.DefaultTeamUserRole != null)
                    hashCode = hashCode * 59 + this.DefaultTeamUserRole.GetHashCode();
                if (this.DefaultChannelAdminRole != null)
                    hashCode = hashCode * 59 + this.DefaultChannelAdminRole.GetHashCode();
                if (this.DefaultChannelUserRole != null)
                    hashCode = hashCode * 59 + this.DefaultChannelUserRole.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
