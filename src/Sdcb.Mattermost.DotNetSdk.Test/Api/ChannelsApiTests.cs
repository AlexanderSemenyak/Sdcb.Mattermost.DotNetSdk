/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Sdcb.Mattermost.DotNetSdk.Client;
using Sdcb.Mattermost.DotNetSdk.Api;
using Sdcb.Mattermost.DotNetSdk.Model;

namespace Sdcb.Mattermost.DotNetSdk.Test
{
    /// <summary>
    ///  Class for testing ChannelsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChannelsApiTests : IDisposable
    {
        private ChannelsApi instance;

        public ChannelsApiTests()
        {
            instance = new ChannelsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChannelsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ChannelsApi
            //Assert.IsType(typeof(ChannelsApi), instance, "instance is a ChannelsApi");
        }

        
        /// <summary>
        /// Test ChannelsChannelIdConvertPost
        /// </summary>
        [Fact]
        public void ChannelsChannelIdConvertPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //var response = instance.ChannelsChannelIdConvertPost(channelId);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdDelete
        /// </summary>
        [Fact]
        public void ChannelsChannelIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //var response = instance.ChannelsChannelIdDelete(channelId);
            //Assert.IsType<StatusOK> (response, "response is StatusOK");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdGet
        /// </summary>
        [Fact]
        public void ChannelsChannelIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //var response = instance.ChannelsChannelIdGet(channelId);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersGet
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //string page = null;
            //string perPage = null;
            //var response = instance.ChannelsChannelIdMembersGet(channelId, page, perPage);
            //Assert.IsType<List<ChannelMember>> (response, "response is List<ChannelMember>");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersIdsPost
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersIdsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //List<string> userIds = null;
            //var response = instance.ChannelsChannelIdMembersIdsPost(channelId, userIds);
            //Assert.IsType<List<ChannelMember>> (response, "response is List<ChannelMember>");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersMinusGroupMembersGet
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersMinusGroupMembersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //string groupIds = null;
            //string page = null;
            //string perPage = null;
            //instance.ChannelsChannelIdMembersMinusGroupMembersGet(channelId, groupIds, page, perPage);
            
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersPost
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //InlineObject36 body = null;
            //var response = instance.ChannelsChannelIdMembersPost(channelId, body);
            //Assert.IsType<ChannelMember> (response, "response is ChannelMember");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersUserIdDelete
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersUserIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //string userId = null;
            //var response = instance.ChannelsChannelIdMembersUserIdDelete(channelId, userId);
            //Assert.IsType<StatusOK> (response, "response is StatusOK");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersUserIdGet
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersUserIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //string userId = null;
            //var response = instance.ChannelsChannelIdMembersUserIdGet(channelId, userId);
            //Assert.IsType<ChannelMember> (response, "response is ChannelMember");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersUserIdNotifyPropsPut
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersUserIdNotifyPropsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //string userId = null;
            //ChannelNotifyProps notifyProps = null;
            //var response = instance.ChannelsChannelIdMembersUserIdNotifyPropsPut(channelId, userId, notifyProps);
            //Assert.IsType<StatusOK> (response, "response is StatusOK");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersUserIdRolesPut
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersUserIdRolesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //string userId = null;
            //InlineObject37 roles = null;
            //var response = instance.ChannelsChannelIdMembersUserIdRolesPut(channelId, userId, roles);
            //Assert.IsType<StatusOK> (response, "response is StatusOK");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdMembersUserIdSchemeRolesPut
        /// </summary>
        [Fact]
        public void ChannelsChannelIdMembersUserIdSchemeRolesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //string userId = null;
            //InlineObject38 body = null;
            //var response = instance.ChannelsChannelIdMembersUserIdSchemeRolesPut(channelId, userId, body);
            //Assert.IsType<StatusOK> (response, "response is StatusOK");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdPatchPut
        /// </summary>
        [Fact]
        public void ChannelsChannelIdPatchPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //InlineObject34 body = null;
            //var response = instance.ChannelsChannelIdPatchPut(channelId, body);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdPinnedGet
        /// </summary>
        [Fact]
        public void ChannelsChannelIdPinnedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //var response = instance.ChannelsChannelIdPinnedGet(channelId);
            //Assert.IsType<PostList> (response, "response is PostList");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdPut
        /// </summary>
        [Fact]
        public void ChannelsChannelIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //InlineObject33 body = null;
            //var response = instance.ChannelsChannelIdPut(channelId, body);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdRestorePost
        /// </summary>
        [Fact]
        public void ChannelsChannelIdRestorePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //var response = instance.ChannelsChannelIdRestorePost(channelId);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdSchemePut
        /// </summary>
        [Fact]
        public void ChannelsChannelIdSchemePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //InlineObject40 body = null;
            //var response = instance.ChannelsChannelIdSchemePut(channelId, body);
            //Assert.IsType<StatusOK> (response, "response is StatusOK");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdStatsGet
        /// </summary>
        [Fact]
        public void ChannelsChannelIdStatsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //var response = instance.ChannelsChannelIdStatsGet(channelId);
            //Assert.IsType<ChannelStats> (response, "response is ChannelStats");
        }
        
        /// <summary>
        /// Test ChannelsChannelIdTimezonesGet
        /// </summary>
        [Fact]
        public void ChannelsChannelIdTimezonesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //var response = instance.ChannelsChannelIdTimezonesGet(channelId);
            //Assert.IsType<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test ChannelsDirectPost
        /// </summary>
        [Fact]
        public void ChannelsDirectPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> body = null;
            //var response = instance.ChannelsDirectPost(body);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test ChannelsGroupPost
        /// </summary>
        [Fact]
        public void ChannelsGroupPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> body = null;
            //var response = instance.ChannelsGroupPost(body);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test ChannelsMembersUserIdViewPost
        /// </summary>
        [Fact]
        public void ChannelsMembersUserIdViewPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //InlineObject39 body = null;
            //var response = instance.ChannelsMembersUserIdViewPost(userId, body);
            //Assert.IsType<InlineResponse2006> (response, "response is InlineResponse2006");
        }
        
        /// <summary>
        /// Test ChannelsPost
        /// </summary>
        [Fact]
        public void ChannelsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject31 body = null;
            //var response = instance.ChannelsPost(body);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test GroupSearchPost
        /// </summary>
        [Fact]
        public void GroupSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject32 body = null;
            //var response = instance.GroupSearchPost(body);
            //Assert.IsType<List<Channel>> (response, "response is List<Channel>");
        }
        
        /// <summary>
        /// Test TeamsNameTeamNameChannelsNameChannelNameGet
        /// </summary>
        [Fact]
        public void TeamsNameTeamNameChannelsNameChannelNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamName = null;
            //string channelName = null;
            //string includeDeleted = null;
            //var response = instance.TeamsNameTeamNameChannelsNameChannelNameGet(teamName, channelName, includeDeleted);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test TeamsTeamIdChannelsAutocompleteGet
        /// </summary>
        [Fact]
        public void TeamsTeamIdChannelsAutocompleteGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string name = null;
            //var response = instance.TeamsTeamIdChannelsAutocompleteGet(teamId, name);
            //Assert.IsType<List<Channel>> (response, "response is List<Channel>");
        }
        
        /// <summary>
        /// Test TeamsTeamIdChannelsDeletedGet
        /// </summary>
        [Fact]
        public void TeamsTeamIdChannelsDeletedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string page = null;
            //string perPage = null;
            //var response = instance.TeamsTeamIdChannelsDeletedGet(teamId, page, perPage);
            //Assert.IsType<List<Channel>> (response, "response is List<Channel>");
        }
        
        /// <summary>
        /// Test TeamsTeamIdChannelsGet
        /// </summary>
        [Fact]
        public void TeamsTeamIdChannelsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string page = null;
            //string perPage = null;
            //var response = instance.TeamsTeamIdChannelsGet(teamId, page, perPage);
            //Assert.IsType<List<Channel>> (response, "response is List<Channel>");
        }
        
        /// <summary>
        /// Test TeamsTeamIdChannelsIdsPost
        /// </summary>
        [Fact]
        public void TeamsTeamIdChannelsIdsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //List<string> body = null;
            //var response = instance.TeamsTeamIdChannelsIdsPost(teamId, body);
            //Assert.IsType<List<Channel>> (response, "response is List<Channel>");
        }
        
        /// <summary>
        /// Test TeamsTeamIdChannelsNameChannelNameGet
        /// </summary>
        [Fact]
        public void TeamsTeamIdChannelsNameChannelNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string channelName = null;
            //string includeDeleted = null;
            //var response = instance.TeamsTeamIdChannelsNameChannelNameGet(teamId, channelName, includeDeleted);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test TeamsTeamIdChannelsSearchAutocompleteGet
        /// </summary>
        [Fact]
        public void TeamsTeamIdChannelsSearchAutocompleteGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string name = null;
            //var response = instance.TeamsTeamIdChannelsSearchAutocompleteGet(teamId, name);
            //Assert.IsType<List<Channel>> (response, "response is List<Channel>");
        }
        
        /// <summary>
        /// Test TeamsTeamIdChannelsSearchPost
        /// </summary>
        [Fact]
        public void TeamsTeamIdChannelsSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //InlineObject35 body = null;
            //var response = instance.TeamsTeamIdChannelsSearchPost(teamId, body);
            //Assert.IsType<List<Channel>> (response, "response is List<Channel>");
        }
        
        /// <summary>
        /// Test UsersUserIdChannelsChannelIdUnreadGet
        /// </summary>
        [Fact]
        public void UsersUserIdChannelsChannelIdUnreadGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //string channelId = null;
            //var response = instance.UsersUserIdChannelsChannelIdUnreadGet(userId, channelId);
            //Assert.IsType<ChannelUnread> (response, "response is ChannelUnread");
        }
        
        /// <summary>
        /// Test UsersUserIdTeamsTeamIdChannelsGet
        /// </summary>
        [Fact]
        public void UsersUserIdTeamsTeamIdChannelsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //string teamId = null;
            //var response = instance.UsersUserIdTeamsTeamIdChannelsGet(userId, teamId);
            //Assert.IsType<List<Channel>> (response, "response is List<Channel>");
        }
        
        /// <summary>
        /// Test UsersUserIdTeamsTeamIdChannelsMembersGet
        /// </summary>
        [Fact]
        public void UsersUserIdTeamsTeamIdChannelsMembersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //string teamId = null;
            //var response = instance.UsersUserIdTeamsTeamIdChannelsMembersGet(userId, teamId);
            //Assert.IsType<List<ChannelMember>> (response, "response is List<ChannelMember>");
        }
        
    }

}
