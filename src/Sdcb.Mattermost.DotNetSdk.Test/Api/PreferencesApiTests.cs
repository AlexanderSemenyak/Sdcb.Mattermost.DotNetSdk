/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Sdcb.Mattermost.DotNetSdk.Client;
using Sdcb.Mattermost.DotNetSdk.Api;
using Sdcb.Mattermost.DotNetSdk.Model;

namespace Sdcb.Mattermost.DotNetSdk.Test
{
    /// <summary>
    ///  Class for testing PreferencesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PreferencesApiTests : IDisposable
    {
        private PreferencesApi instance;

        public PreferencesApiTests()
        {
            instance = new PreferencesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PreferencesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PreferencesApi
            //Assert.IsType(typeof(PreferencesApi), instance, "instance is a PreferencesApi");
        }

        
        /// <summary>
        /// Test UsersUserIdPreferencesCategoryGet
        /// </summary>
        [Fact]
        public void UsersUserIdPreferencesCategoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //string category = null;
            //var response = instance.UsersUserIdPreferencesCategoryGet(userId, category);
            //Assert.IsType<List<Preference>> (response, "response is List<Preference>");
        }
        
        /// <summary>
        /// Test UsersUserIdPreferencesCategoryNamePreferenceNameGet
        /// </summary>
        [Fact]
        public void UsersUserIdPreferencesCategoryNamePreferenceNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //string category = null;
            //string preferenceName = null;
            //var response = instance.UsersUserIdPreferencesCategoryNamePreferenceNameGet(userId, category, preferenceName);
            //Assert.IsType<Preference> (response, "response is Preference");
        }
        
        /// <summary>
        /// Test UsersUserIdPreferencesDeletePost
        /// </summary>
        [Fact]
        public void UsersUserIdPreferencesDeletePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //List<Preference> body = null;
            //var response = instance.UsersUserIdPreferencesDeletePost(userId, body);
            //Assert.IsType<StatusOK> (response, "response is StatusOK");
        }
        
        /// <summary>
        /// Test UsersUserIdPreferencesGet
        /// </summary>
        [Fact]
        public void UsersUserIdPreferencesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //var response = instance.UsersUserIdPreferencesGet(userId);
            //Assert.IsType<List<Preference>> (response, "response is List<Preference>");
        }
        
        /// <summary>
        /// Test UsersUserIdPreferencesPut
        /// </summary>
        [Fact]
        public void UsersUserIdPreferencesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //List<Preference> body = null;
            //var response = instance.UsersUserIdPreferencesPut(userId, body);
            //Assert.IsType<StatusOK> (response, "response is StatusOK");
        }
        
    }

}
