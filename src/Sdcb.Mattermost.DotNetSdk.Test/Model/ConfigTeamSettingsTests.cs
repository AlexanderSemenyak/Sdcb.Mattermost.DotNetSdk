/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Sdcb.Mattermost.DotNetSdk.Api;
using Sdcb.Mattermost.DotNetSdk.Model;
using Sdcb.Mattermost.DotNetSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Sdcb.Mattermost.DotNetSdk.Test
{
    /// <summary>
    ///  Class for testing ConfigTeamSettings
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ConfigTeamSettingsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ConfigTeamSettings
        //private ConfigTeamSettings instance;

        public ConfigTeamSettingsTests()
        {
            // TODO uncomment below to create an instance of ConfigTeamSettings
            //instance = new ConfigTeamSettings();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ConfigTeamSettings
        /// </summary>
        [Fact]
        public void ConfigTeamSettingsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ConfigTeamSettings
            //Assert.IsInstanceOfType<ConfigTeamSettings> (instance, "variable 'instance' is a ConfigTeamSettings");
        }


        /// <summary>
        /// Test the property 'SiteName'
        /// </summary>
        [Fact]
        public void SiteNameTest()
        {
            // TODO unit test for the property 'SiteName'
        }
        /// <summary>
        /// Test the property 'MaxUsersPerTeam'
        /// </summary>
        [Fact]
        public void MaxUsersPerTeamTest()
        {
            // TODO unit test for the property 'MaxUsersPerTeam'
        }
        /// <summary>
        /// Test the property 'EnableTeamCreation'
        /// </summary>
        [Fact]
        public void EnableTeamCreationTest()
        {
            // TODO unit test for the property 'EnableTeamCreation'
        }
        /// <summary>
        /// Test the property 'EnableUserCreation'
        /// </summary>
        [Fact]
        public void EnableUserCreationTest()
        {
            // TODO unit test for the property 'EnableUserCreation'
        }
        /// <summary>
        /// Test the property 'EnableOpenServer'
        /// </summary>
        [Fact]
        public void EnableOpenServerTest()
        {
            // TODO unit test for the property 'EnableOpenServer'
        }
        /// <summary>
        /// Test the property 'RestrictCreationToDomains'
        /// </summary>
        [Fact]
        public void RestrictCreationToDomainsTest()
        {
            // TODO unit test for the property 'RestrictCreationToDomains'
        }
        /// <summary>
        /// Test the property 'EnableCustomBrand'
        /// </summary>
        [Fact]
        public void EnableCustomBrandTest()
        {
            // TODO unit test for the property 'EnableCustomBrand'
        }
        /// <summary>
        /// Test the property 'CustomBrandText'
        /// </summary>
        [Fact]
        public void CustomBrandTextTest()
        {
            // TODO unit test for the property 'CustomBrandText'
        }
        /// <summary>
        /// Test the property 'CustomDescriptionText'
        /// </summary>
        [Fact]
        public void CustomDescriptionTextTest()
        {
            // TODO unit test for the property 'CustomDescriptionText'
        }
        /// <summary>
        /// Test the property 'RestrictDirectMessage'
        /// </summary>
        [Fact]
        public void RestrictDirectMessageTest()
        {
            // TODO unit test for the property 'RestrictDirectMessage'
        }
        /// <summary>
        /// Test the property 'RestrictTeamInvite'
        /// </summary>
        [Fact]
        public void RestrictTeamInviteTest()
        {
            // TODO unit test for the property 'RestrictTeamInvite'
        }
        /// <summary>
        /// Test the property 'RestrictPublicChannelManagement'
        /// </summary>
        [Fact]
        public void RestrictPublicChannelManagementTest()
        {
            // TODO unit test for the property 'RestrictPublicChannelManagement'
        }
        /// <summary>
        /// Test the property 'RestrictPrivateChannelManagement'
        /// </summary>
        [Fact]
        public void RestrictPrivateChannelManagementTest()
        {
            // TODO unit test for the property 'RestrictPrivateChannelManagement'
        }
        /// <summary>
        /// Test the property 'RestrictPublicChannelCreation'
        /// </summary>
        [Fact]
        public void RestrictPublicChannelCreationTest()
        {
            // TODO unit test for the property 'RestrictPublicChannelCreation'
        }
        /// <summary>
        /// Test the property 'RestrictPrivateChannelCreation'
        /// </summary>
        [Fact]
        public void RestrictPrivateChannelCreationTest()
        {
            // TODO unit test for the property 'RestrictPrivateChannelCreation'
        }
        /// <summary>
        /// Test the property 'RestrictPublicChannelDeletion'
        /// </summary>
        [Fact]
        public void RestrictPublicChannelDeletionTest()
        {
            // TODO unit test for the property 'RestrictPublicChannelDeletion'
        }
        /// <summary>
        /// Test the property 'RestrictPrivateChannelDeletion'
        /// </summary>
        [Fact]
        public void RestrictPrivateChannelDeletionTest()
        {
            // TODO unit test for the property 'RestrictPrivateChannelDeletion'
        }
        /// <summary>
        /// Test the property 'UserStatusAwayTimeout'
        /// </summary>
        [Fact]
        public void UserStatusAwayTimeoutTest()
        {
            // TODO unit test for the property 'UserStatusAwayTimeout'
        }
        /// <summary>
        /// Test the property 'MaxChannelsPerTeam'
        /// </summary>
        [Fact]
        public void MaxChannelsPerTeamTest()
        {
            // TODO unit test for the property 'MaxChannelsPerTeam'
        }
        /// <summary>
        /// Test the property 'MaxNotificationsPerChannel'
        /// </summary>
        [Fact]
        public void MaxNotificationsPerChannelTest()
        {
            // TODO unit test for the property 'MaxNotificationsPerChannel'
        }

    }

}
