/* 
 * Mattermost API Reference
 *
 * There is also a work-in-progress [Postman API reference](https://documenter.getpostman.com/view/4508214/RW8FERUn). 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: feedback@mattermost.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Sdcb.Mattermost.DotNetSdk.Api;
using Sdcb.Mattermost.DotNetSdk.Model;
using Sdcb.Mattermost.DotNetSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Sdcb.Mattermost.DotNetSdk.Test
{
    /// <summary>
    ///  Class for testing EnvironmentConfigEmailSettings
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EnvironmentConfigEmailSettingsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EnvironmentConfigEmailSettings
        //private EnvironmentConfigEmailSettings instance;

        public EnvironmentConfigEmailSettingsTests()
        {
            // TODO uncomment below to create an instance of EnvironmentConfigEmailSettings
            //instance = new EnvironmentConfigEmailSettings();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EnvironmentConfigEmailSettings
        /// </summary>
        [Fact]
        public void EnvironmentConfigEmailSettingsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" EnvironmentConfigEmailSettings
            //Assert.IsInstanceOfType<EnvironmentConfigEmailSettings> (instance, "variable 'instance' is a EnvironmentConfigEmailSettings");
        }


        /// <summary>
        /// Test the property 'EnableSignUpWithEmail'
        /// </summary>
        [Fact]
        public void EnableSignUpWithEmailTest()
        {
            // TODO unit test for the property 'EnableSignUpWithEmail'
        }
        /// <summary>
        /// Test the property 'EnableSignInWithEmail'
        /// </summary>
        [Fact]
        public void EnableSignInWithEmailTest()
        {
            // TODO unit test for the property 'EnableSignInWithEmail'
        }
        /// <summary>
        /// Test the property 'EnableSignInWithUsername'
        /// </summary>
        [Fact]
        public void EnableSignInWithUsernameTest()
        {
            // TODO unit test for the property 'EnableSignInWithUsername'
        }
        /// <summary>
        /// Test the property 'SendEmailNotifications'
        /// </summary>
        [Fact]
        public void SendEmailNotificationsTest()
        {
            // TODO unit test for the property 'SendEmailNotifications'
        }
        /// <summary>
        /// Test the property 'RequireEmailVerification'
        /// </summary>
        [Fact]
        public void RequireEmailVerificationTest()
        {
            // TODO unit test for the property 'RequireEmailVerification'
        }
        /// <summary>
        /// Test the property 'FeedbackName'
        /// </summary>
        [Fact]
        public void FeedbackNameTest()
        {
            // TODO unit test for the property 'FeedbackName'
        }
        /// <summary>
        /// Test the property 'FeedbackEmail'
        /// </summary>
        [Fact]
        public void FeedbackEmailTest()
        {
            // TODO unit test for the property 'FeedbackEmail'
        }
        /// <summary>
        /// Test the property 'FeedbackOrganization'
        /// </summary>
        [Fact]
        public void FeedbackOrganizationTest()
        {
            // TODO unit test for the property 'FeedbackOrganization'
        }
        /// <summary>
        /// Test the property 'SMTPUsername'
        /// </summary>
        [Fact]
        public void SMTPUsernameTest()
        {
            // TODO unit test for the property 'SMTPUsername'
        }
        /// <summary>
        /// Test the property 'SMTPPassword'
        /// </summary>
        [Fact]
        public void SMTPPasswordTest()
        {
            // TODO unit test for the property 'SMTPPassword'
        }
        /// <summary>
        /// Test the property 'SMTPServer'
        /// </summary>
        [Fact]
        public void SMTPServerTest()
        {
            // TODO unit test for the property 'SMTPServer'
        }
        /// <summary>
        /// Test the property 'SMTPPort'
        /// </summary>
        [Fact]
        public void SMTPPortTest()
        {
            // TODO unit test for the property 'SMTPPort'
        }
        /// <summary>
        /// Test the property 'ConnectionSecurity'
        /// </summary>
        [Fact]
        public void ConnectionSecurityTest()
        {
            // TODO unit test for the property 'ConnectionSecurity'
        }
        /// <summary>
        /// Test the property 'InviteSalt'
        /// </summary>
        [Fact]
        public void InviteSaltTest()
        {
            // TODO unit test for the property 'InviteSalt'
        }
        /// <summary>
        /// Test the property 'PasswordResetSalt'
        /// </summary>
        [Fact]
        public void PasswordResetSaltTest()
        {
            // TODO unit test for the property 'PasswordResetSalt'
        }
        /// <summary>
        /// Test the property 'SendPushNotifications'
        /// </summary>
        [Fact]
        public void SendPushNotificationsTest()
        {
            // TODO unit test for the property 'SendPushNotifications'
        }
        /// <summary>
        /// Test the property 'PushNotificationServer'
        /// </summary>
        [Fact]
        public void PushNotificationServerTest()
        {
            // TODO unit test for the property 'PushNotificationServer'
        }
        /// <summary>
        /// Test the property 'PushNotificationContents'
        /// </summary>
        [Fact]
        public void PushNotificationContentsTest()
        {
            // TODO unit test for the property 'PushNotificationContents'
        }
        /// <summary>
        /// Test the property 'EnableEmailBatching'
        /// </summary>
        [Fact]
        public void EnableEmailBatchingTest()
        {
            // TODO unit test for the property 'EnableEmailBatching'
        }
        /// <summary>
        /// Test the property 'EmailBatchingBufferSize'
        /// </summary>
        [Fact]
        public void EmailBatchingBufferSizeTest()
        {
            // TODO unit test for the property 'EmailBatchingBufferSize'
        }
        /// <summary>
        /// Test the property 'EmailBatchingInterval'
        /// </summary>
        [Fact]
        public void EmailBatchingIntervalTest()
        {
            // TODO unit test for the property 'EmailBatchingInterval'
        }

    }

}
